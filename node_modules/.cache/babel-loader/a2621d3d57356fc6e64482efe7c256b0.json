{"ast":null,"code":"var _jsxFileName = \"/home/alynux/GitHub/fifteen-puzzle/src/components/GridRow.tsx\";\nimport React from \"react\";\nimport GridSquare from \"./GridSquare\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridRowStyle = {\n  display: \"flex\",\n  flexDirection: \"row\"\n};\n\nconst GridRow = _ref => {\n  let {\n    mutableGame,\n    setGameState,\n    boardState,\n    gridArrayRow\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: gridRowStyle,\n    children: gridArrayRow.map(tile => {\n      return /*#__PURE__*/_jsxDEV(GridSquare, {\n        tile: tile,\n        boardState: boardState,\n        mutableGame: mutableGame,\n        setGameState: setGameState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GridRow;\nexport default GridRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridRow\");","map":{"version":3,"sources":["/home/alynux/GitHub/fifteen-puzzle/src/components/GridRow.tsx"],"names":["React","GridSquare","gridRowStyle","display","flexDirection","GridRow","mutableGame","setGameState","boardState","gridArrayRow","map","tile"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,MADU;AAEnBC,EAAAA,aAAa,EAAE;AAFI,CAArB;;AAKA,MAAMC,OAAO,GAAG,QAA6D;AAAA,MAA5D;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA,UAA7B;AAAyCC,IAAAA;AAAzC,GAA4D;AAC3E,sBACE;AAAK,IAAA,KAAK,EAAEP,YAAZ;AAAA,cACGO,YAAY,CAACC,GAAb,CAAkBC,IAAD,IAAU;AAC1B,0BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAEA,IADR;AAEE,QAAA,UAAU,EAAEH,UAFd;AAGE,QAAA,WAAW,EAAEF,WAHf;AAIE,QAAA,YAAY,EAAEC;AAJhB;AAAA;AAAA;AAAA;AAAA,cADF;AAQD,KATA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMF,O;AAiBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport GridSquare from \"./GridSquare\";\n\nconst gridRowStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n};\n\nconst GridRow = ({ mutableGame, setGameState, boardState, gridArrayRow }) => {\n  return (\n    <div style={gridRowStyle}>\n      {gridArrayRow.map((tile) => {\n        return (\n          <GridSquare\n            tile={tile}\n            boardState={boardState}\n            mutableGame={mutableGame}\n            setGameState={setGameState}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default GridRow;\n"]},"metadata":{},"sourceType":"module"}