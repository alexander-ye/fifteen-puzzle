{"ast":null,"code":"import TileObject from \"./tile\";\nexport default class BoardObject {\n  constructor() {\n    this.boardState = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14].flatMap(i => new TileObject(i + 1, i));\n  } // Fisher-Yates shuffle algorithm\n\n\n  shuffleTiles() {\n    const boardTiles = [...this.boardState];\n    console.log(boardTiles);\n    let currentIndex = boardTiles.size;\n    let randomIndex; // While elements exist to shuffle\n\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // Swap board tile positions in boardState list\n\n      [boardTiles[currentIndex], boardTiles[randomIndex]] = [boardTiles[randomIndex], boardTiles[currentIndex]]; // Change board tile indeces\n\n      boardTiles[currentIndex].setPosition(randomIndex);\n      boardTiles[randomIndex].setPosition(currentIndex);\n    }\n\n    this.boardState = boardTiles;\n  }\n\n}","map":{"version":3,"sources":["/home/alynux/GitHub/fifteen-puzzle/src/classes/board.js"],"names":["TileObject","BoardObject","constructor","boardState","flatMap","i","shuffleTiles","boardTiles","console","log","currentIndex","size","randomIndex","Math","floor","random","setPosition"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,QAAvB;AAEA,eAAe,MAAMC,WAAN,CAAkB;AAC/BC,EAAAA,WAAW,GAAG;AACZ,SAAKC,UAAL,GAAkB,CAChB,CADgB,EACb,CADa,EACV,CADU,EACP,CADO,EACJ,CADI,EACD,CADC,EACE,CADF,EACK,CADL,EACQ,CADR,EACW,CADX,EACc,EADd,EACkB,EADlB,EACsB,EADtB,EAC0B,EAD1B,EAC8B,EAD9B,EAEhBC,OAFgB,CAEPC,CAAD,IAAO,IAAIL,UAAJ,CAAeK,CAAC,GAAG,CAAnB,EAAsBA,CAAtB,CAFC,CAAlB;AAGD,GAL8B,CAO/B;;;AACAC,EAAAA,YAAY,GAAG;AACb,UAAMC,UAAU,GAAG,CAAC,GAAG,KAAKJ,UAAT,CAAnB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,QAAIG,YAAY,GAAGH,UAAU,CAACI,IAA9B;AACA,QAAIC,WAAJ,CAJa,CAMb;;AACA,WAAOF,YAAY,IAAI,CAAvB,EAA0B;AACxBE,MAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,YAA3B,CAAd;AACAA,MAAAA,YAAY,GAFY,CAIxB;;AACA,OAACH,UAAU,CAACG,YAAD,CAAX,EAA2BH,UAAU,CAACK,WAAD,CAArC,IAAsD,CACpDL,UAAU,CAACK,WAAD,CAD0C,EAEpDL,UAAU,CAACG,YAAD,CAF0C,CAAtD,CALwB,CAUxB;;AACAH,MAAAA,UAAU,CAACG,YAAD,CAAV,CAAyBM,WAAzB,CAAqCJ,WAArC;AACAL,MAAAA,UAAU,CAACK,WAAD,CAAV,CAAwBI,WAAxB,CAAoCN,YAApC;AACD;;AAED,SAAKP,UAAL,GAAkBI,UAAlB;AACD;;AA/B8B","sourcesContent":["import TileObject from \"./tile\";\n\nexport default class BoardObject {\n  constructor() {\n    this.boardState = [\n      0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\n    ].flatMap((i) => new TileObject(i + 1, i));\n  }\n\n  // Fisher-Yates shuffle algorithm\n  shuffleTiles() {\n    const boardTiles = [...this.boardState];\n    console.log(boardTiles);\n    let currentIndex = boardTiles.size;\n    let randomIndex;\n\n    // While elements exist to shuffle\n    while (currentIndex != 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // Swap board tile positions in boardState list\n      [boardTiles[currentIndex], boardTiles[randomIndex]] = [\n        boardTiles[randomIndex],\n        boardTiles[currentIndex],\n      ];\n\n      // Change board tile indeces\n      boardTiles[currentIndex].setPosition(randomIndex);\n      boardTiles[randomIndex].setPosition(currentIndex);\n    }\n\n    this.boardState = boardTiles;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}