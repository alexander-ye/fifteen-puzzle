{"ast":null,"code":"var _jsxFileName = \"/home/alynux/GitHub/fifteen-puzzle/src/components/GridSquare.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst gridSquareStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  width: \"75px\",\n  height: \"75px\",\n  boxShadow: \"1px 1px 5px gray\"\n};\nconst gridSquareImmediateStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  width: \"75px\",\n  height: \"75px\",\n  boxShadow: \"1px 1px 5px gray\",\n  backgroundColor: \"green\"\n};\nconst gridSquareDistantStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  width: \"75px\",\n  height: \"75px\",\n  boxShadow: \"1px 1px 5px gray\",\n  backgroundColor: \"pink\"\n};\n\nconst GridSquare = _ref => {\n  let {\n    tile,\n    mutableGame,\n    setGameState\n  } = _ref;\n\n  const immediateMove = () => {\n    // mutableGame.board.immediateMove(tile);\n    setGameState(0);\n  };\n\n  if (tile.number === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridSquareStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  } else if (tile.immediateMovable || tile.columnMovable || tile.rowMovable) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: tile.immediateMovable ? immediateMove : () => console.log(\"Todo\"),\n      style: tile.immediateMovable ? gridSquareImmediateStyle : gridSquareDistantStyle,\n      children: tile.number\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridSquareStyle,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: tile.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c = GridSquare;\nexport default GridSquare;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridSquare\");","map":{"version":3,"sources":["/home/alynux/GitHub/fifteen-puzzle/src/components/GridSquare.js"],"names":["React","gridSquareStyle","display","flexDirection","justifyContent","textAlign","width","height","boxShadow","gridSquareImmediateStyle","backgroundColor","gridSquareDistantStyle","GridSquare","tile","mutableGame","setGameState","immediateMove","number","immediateMovable","columnMovable","rowMovable","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,OAAO,EAAE,MADa;AAEtBC,EAAAA,aAAa,EAAE,QAFO;AAGtBC,EAAAA,cAAc,EAAE,QAHM;AAItBC,EAAAA,SAAS,EAAE,QAJW;AAKtBC,EAAAA,KAAK,EAAE,MALe;AAMtBC,EAAAA,MAAM,EAAE,MANc;AAOtBC,EAAAA,SAAS,EAAE;AAPW,CAAxB;AAUA,MAAMC,wBAAwB,GAAG;AAC/BP,EAAAA,OAAO,EAAE,MADsB;AAE/BC,EAAAA,aAAa,EAAE,QAFgB;AAG/BC,EAAAA,cAAc,EAAE,QAHe;AAI/BC,EAAAA,SAAS,EAAE,QAJoB;AAK/BC,EAAAA,KAAK,EAAE,MALwB;AAM/BC,EAAAA,MAAM,EAAE,MANuB;AAO/BC,EAAAA,SAAS,EAAE,kBAPoB;AAQ/BE,EAAAA,eAAe,EAAE;AARc,CAAjC;AAWA,MAAMC,sBAAsB,GAAG;AAC7BT,EAAAA,OAAO,EAAE,MADoB;AAE7BC,EAAAA,aAAa,EAAE,QAFc;AAG7BC,EAAAA,cAAc,EAAE,QAHa;AAI7BC,EAAAA,SAAS,EAAE,QAJkB;AAK7BC,EAAAA,KAAK,EAAE,MALsB;AAM7BC,EAAAA,MAAM,EAAE,MANqB;AAO7BC,EAAAA,SAAS,EAAE,kBAPkB;AAQ7BE,EAAAA,eAAe,EAAE;AARY,CAA/B;;AAWA,MAAME,UAAU,GAAG,QAAyC;AAAA,MAAxC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,GAAwC;;AAC1D,QAAMC,aAAa,GAAG,MAAM;AAC1B;AACAD,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACD,GAHD;;AAKA,MAAIF,IAAI,CAACI,MAAL,KAAgB,CAApB,EAAuB;AACrB,wBAAO;AAAK,MAAA,KAAK,EAAEhB;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAIY,IAAI,CAACK,gBAAL,IAAyBL,IAAI,CAACM,aAA9B,IAA+CN,IAAI,CAACO,UAAxD,EAAoE;AACzE,wBACE;AACE,MAAA,OAAO,EACLP,IAAI,CAACK,gBAAL,GAAwBF,aAAxB,GAAwC,MAAMK,OAAO,CAACC,GAAR,CAAY,MAAZ,CAFlD;AAIE,MAAA,KAAK,EACHT,IAAI,CAACK,gBAAL,GACIT,wBADJ,GAEIE,sBAPR;AAAA,gBAUGE,IAAI,CAACI;AAVR;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfM,MAeA;AACL,wBACE;AAAK,MAAA,KAAK,EAAEhB,eAAZ;AAAA,6BACE;AAAA,kBAAIY,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CA9BD;;KAAML,U;AAgCN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\n\nconst gridSquareStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  width: \"75px\",\n  height: \"75px\",\n  boxShadow: \"1px 1px 5px gray\",\n};\n\nconst gridSquareImmediateStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  width: \"75px\",\n  height: \"75px\",\n  boxShadow: \"1px 1px 5px gray\",\n  backgroundColor: \"green\",\n};\n\nconst gridSquareDistantStyle = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  textAlign: \"center\",\n  width: \"75px\",\n  height: \"75px\",\n  boxShadow: \"1px 1px 5px gray\",\n  backgroundColor: \"pink\",\n};\n\nconst GridSquare = ({ tile, mutableGame, setGameState }) => {\n  const immediateMove = () => {\n    // mutableGame.board.immediateMove(tile);\n    setGameState(0);\n  };\n\n  if (tile.number === 0) {\n    return <div style={gridSquareStyle}></div>;\n  } else if (tile.immediateMovable || tile.columnMovable || tile.rowMovable) {\n    return (\n      <button\n        onClick={\n          tile.immediateMovable ? immediateMove : () => console.log(\"Todo\")\n        }\n        style={\n          tile.immediateMovable\n            ? gridSquareImmediateStyle\n            : gridSquareDistantStyle\n        }\n      >\n        {tile.number}\n      </button>\n    );\n  } else {\n    return (\n      <div style={gridSquareStyle}>\n        <p>{tile.number}</p>\n      </div>\n    );\n  }\n};\n\nexport default GridSquare;\n"]},"metadata":{},"sourceType":"module"}